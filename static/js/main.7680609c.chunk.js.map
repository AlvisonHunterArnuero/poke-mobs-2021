{"version":3,"sources":["context/DataProvider.js","components/Spinner.jsx","routes.js","App.js","reportWebVitals.js","index.js"],"names":["PokeDataContext","createContext","DataProvider","children","useState","pokemonsCollection","setPokemonsCollection","fetchPokemon","setFetchPokemon","selectedPokemon","setSelectedPokemon","isLoading","setIsLoading","pageNotFound","setPageNotFound","darkTheme","setDarkTheme","getAPIResults","a","fetch","fetchedDataResults","status","json","res_JSON","getRandomPokemon","rndInteger","Math","floor","random","name","Provider","value","Spinner","className","role","Pokedeck","React","lazy","Welcome","routes","path","exact","component","App","basename","fallback","map","route","idx","render","props","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"yLACaA,EAAkBC,0BAsEhBC,IApEM,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACeC,mBAAS,IADxB,mBAC9BC,EAD8B,KACVC,EADU,OAEGF,mBAAS,WAFZ,mBAE9BG,EAF8B,KAEhBC,EAFgB,OAGSJ,mBAAS,WAHlB,mBAG9BK,EAH8B,KAGbC,EAHa,OAIHN,oBAAS,GAJN,mBAI9BO,EAJ8B,KAInBC,EAJmB,OAKGR,oBAAS,GALZ,mBAK9BS,EAL8B,KAKhBC,EALgB,OAMHV,oBAAS,GANN,mBAM9BW,EAN8B,KAMnBC,EANmB,KAS/BC,EAAa,uCAAG,8BAAAC,EAAA,6DACpBN,GAAa,GADO,SAEaO,MAAM,qCAAD,OACCZ,IAHnB,UAKc,OAH5Ba,EAFc,QAKGC,OALH,uBAMlBP,GAAgB,GANE,2CASKM,EAAmBE,OATxB,eASZC,EATY,OAUlBjB,EAAsBiB,GACtBX,GAAa,GACbE,GAAgB,GAZE,kBAaXS,GAbW,4CAAH,qDAiBbC,EAAgB,uCAAG,gCAAAN,EAAA,6DACvBN,GAAa,GACPa,EAAaC,KAAKC,MAAsB,IAAhBD,KAAKE,SAAiB,GAF7B,SAGUT,MAAM,qCAAD,OACCM,IAJhB,UAMW,OAH5BL,EAHiB,QAMAC,OANA,wBAOrBP,GAAgB,GAPK,4CAUEM,EAAmBE,OAVrB,eAUfC,EAVe,OAWrBjB,EAAsBiB,GACtBX,GAAa,GACbE,GAAgB,GAChBN,EAAgBe,EAASM,MAdJ,kBAedN,GAfc,4CAAH,qDAmBtB,OACE,cAACvB,EAAgB8B,SAAjB,CACEC,MAAO,CACL1B,qBACAC,wBACAW,gBACAO,mBACAjB,eACAC,kBACAG,YACAC,eACAG,YACAC,eACAP,kBACAC,qBACAG,eACAC,mBAfJ,SAkBGX,M,6ECnEM6B,EAAU,WACrB,OACE,qBAAKC,UAAU,sDAAf,SACE,qBAAKA,UAAU,qCAAqCC,KAAK,SAAzD,SACE,sBAAMD,UAAU,kBAAhB,8B,6JCHFE,G,MAAWC,IAAMC,MAAK,kBAAM,iCAC5BC,EAAUF,IAAMC,MAAK,kBAAM,gCAkBlBE,EAhBA,CACd,CACCC,KAAM,IACNC,OAAO,EACPZ,KAAM,UACNa,UAAWJ,GAEZ,CACCE,KAAM,YACNC,OAAO,EACPZ,KAAM,WACNa,UAAWP,GAET,CAAEK,KAAM,IAAKC,OAAO,EAAMZ,KAAM,iBAAkBa,UAAWJ,I,eCkBlDK,MA5Bf,WACE,OACE,cAACzC,EAAA,EAAD,UACE,cAAC,IAAD,CAAQ0C,SAAS,kBAAjB,SACE,cAAC,WAAD,CAAUC,SAAU,cAACb,EAAA,EAAD,IAApB,SACE,cAAC,IAAD,UACGO,EAAOO,KAAI,SAACC,EAAOC,GAClB,OACED,EAAML,WACJ,cAAC,IAAD,CAEEF,KAAMO,EAAMP,KACZC,MAAOM,EAAMN,MACbZ,KAAMkB,EAAMlB,KACZoB,OAAQ,SAACC,GACP,OAAO,cAACH,EAAML,UAAP,eAAqBQ,MALzBF,eCLVG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASX,OACP,cAAC,IAAMY,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7680609c.chunk.js","sourcesContent":["import React, { createContext, useState } from \"react\";\nexport const PokeDataContext = createContext();\n\nconst DataProvider = ({ children }) => {\n  const [pokemonsCollection, setPokemonsCollection] = useState([]);\n  const [fetchPokemon, setFetchPokemon] = useState(\"pikachu\");\n  const [selectedPokemon, setSelectedPokemon] = useState(\"pikachu\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [pageNotFound, setPageNotFound] = useState(false);\n  const [darkTheme, setDarkTheme] = useState(true);\n\n  // API fetch event to retrieve the data needed on this component\n  const getAPIResults = async () => {\n    setIsLoading(true);\n    const fetchedDataResults = await fetch(\n      `https://pokeapi.co/api/v2/pokemon/${fetchPokemon}`\n    );\n    if (fetchedDataResults.status === 404) {\n      setPageNotFound(true);\n      return;\n    } else {\n      const res_JSON = await fetchedDataResults.json();\n      setPokemonsCollection(res_JSON);\n      setIsLoading(false);\n      setPageNotFound(false);\n      return res_JSON;\n    }\n  };\n\n  const getRandomPokemon = async () => {\n    setIsLoading(true);\n    const rndInteger = Math.floor(Math.random() * 806 + 1);\n    const fetchedDataResults = await fetch(\n      `https://pokeapi.co/api/v2/pokemon/${rndInteger}`\n    );\n    if (fetchedDataResults.status === 404) {\n      setPageNotFound(true);\n      return;\n    } else {\n      const res_JSON = await fetchedDataResults.json();\n      setPokemonsCollection(res_JSON);\n      setIsLoading(false);\n      setPageNotFound(false);\n      setFetchPokemon(res_JSON.name);\n      return res_JSON;\n    }\n  };\n\n  return (\n    <PokeDataContext.Provider\n      value={{\n        pokemonsCollection,\n        setPokemonsCollection,\n        getAPIResults,\n        getRandomPokemon,\n        fetchPokemon,\n        setFetchPokemon,\n        isLoading,\n        setIsLoading,\n        darkTheme,\n        setDarkTheme,\n        selectedPokemon,\n        setSelectedPokemon,\n        pageNotFound,\n        setPageNotFound,\n      }}\n    >\n      {children}\n    </PokeDataContext.Provider>\n  );\n};\nexport default DataProvider;\n","export const Spinner = () => {\n  return (\n    <div className='row w-100 align-items-center justify-content-center'>\n      <div className='col-12 spinner-border text-warning' role='status'>\n        <span className='visually-hidden'>Loading...</span>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nconst Pokedeck = React.lazy(() => import(\"./components/Pokedeck\"));\nconst Welcome = React.lazy(() => import(\"./components/Welcome\"));\n\nconst routes = [\n\t{\n\t\tpath: \"/\",\n\t\texact: true,\n\t\tname: \"Welcome\",\n\t\tcomponent: Welcome,\n\t},\n\t{\n\t\tpath: \"/pokedeck\",\n\t\texact: true,\n\t\tname: \"Pokedeck\",\n\t\tcomponent: Pokedeck,\n\t},\n    { path: \"*\", exact: true, name: \"Page Not Found\", component: Welcome },\n];\n\nexport default routes;","import React, { Suspense } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport DataProvider from \"./context/DataProvider\";\nimport \"./App.css\";\nimport routes from \"./routes\";\nimport { Spinner } from \"./components/Spinner\";\n\nfunction App() {\n  return (\n    <DataProvider>\n      <Router basename='/poke-mobs-2021'>\n        <Suspense fallback={<Spinner />}>\n          <Switch>\n            {routes.map((route, idx) => {\n              return (\n                route.component && (\n                  <Route\n                    key={idx}\n                    path={route.path}\n                    exact={route.exact}\n                    name={route.name}\n                    render={(props) => {\n                      return <route.component {...props} />;\n                    }}\n                  />\n                )\n              );\n            })}\n          </Switch>\n        </Suspense>\n      </Router>\n    </DataProvider>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}