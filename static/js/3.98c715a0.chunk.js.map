{"version":3,"sources":["components/DisplaySprites.jsx","components/GetPokemonAbilities.jsx","components/GetRandomPokemon.jsx","components/PokemonDetails.jsx","components/PokemonStats.jsx","components/PokemonDefaultImage.jsx","components/Card.jsx","components/Pokedeck.jsx"],"names":["DisplaySprites","sprites","pokemonAnimatedViews","name","className","src","front_shiny","alt","back_default","front_default","GetPokemonAbilities","abilities","map","item","ind","ability","GetRandomPokemon","getAPIResults","useContext","PokeDataContext","type","onClick","PokemonDetails","pokemonDetails","height","weight","base_experience","PokemonStats","pokeStats","base_stat","PokemonDefaultImage","pokeType","Card","data","isLoading","types","species","stats","black_white","versions","console","log","back_shiny","animated","Spinner","other","dream_world","Pokedeck","pokemonsCollection","useEffect"],"mappings":"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","file":"static/js/3.98c715a0.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const DisplaySprites = ({ sprites, pokemonAnimatedViews, name }) => {\n  return (\n    <div className='row justify-content-center border-bottom border-top border-danger my-3 py-3 text-center'>\n      <div className='col-4'>\n        <img\n          src={pokemonAnimatedViews?.front_shiny || sprites?.front_shiny}\n          className='w-25 card-img-top'\n          alt={name}\n        />\n      </div>\n      <div className='col-4'>\n        <img\n          src={pokemonAnimatedViews?.back_default || sprites?.back_default}\n          className='w-25 card-img-top'\n          alt={name}\n        />\n      </div>\n      <div className='col-4'>\n        <img\n          src={pokemonAnimatedViews?.front_default || sprites?.front_default}\n          className='w-25 card-img-top'\n          alt={name}\n        />\n      </div>\n    </div>\n  );\n};\n","import React, { Fragment } from \"react\";\n\nexport const GetPokemonAbilities = ({ abilities, name }) => {\n  return (\n    <Fragment>\n      <h3 className='card-subtitle mb-3 text-success text-center text-uppercase mx-auto'>\n        {name} has the below abilities:\n      </h3>\n      <div className='row w-50 mx-auto justify-content-between text-uppercase text-muted text-center bg-dark'>\n        {abilities?.map((item, ind) => {\n          return (\n            <div key={ind} className='col-12 col-md-4 text-info'>\n              {item.ability.name}\n            </div>\n          );\n        })}\n      </div>\n    </Fragment>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { PokeDataContext } from \"../context/DataProvider\";\n\nexport const GetRandomPokemon = () => {\n    const { getAPIResults } = useContext(PokeDataContext);\n    return (\n      <div className='row justify-content-center mt-4'>\n        <button\n          type='button'\n          onClick={() => getAPIResults()}\n          className='btn-lg btn btn-outline-primary w-50'\n        >\n          GET RANDOM POKEMON\n        </button>\n      </div>\n    );\n  };","import React from \"react\";\n\nexport const PokemonDetails = ({pokemonDetails}) => {\n    return (\n        <div className='row justify-content-center mx-auto text-center'>\n        <div className='col-6 col-md-4 col-lg-3'>\n          <span className='text-success'>Height: </span>\n          {pokemonDetails.height} ft\n        </div>\n        <div className='col-6 col-md-4 col-lg-3'>\n          <span className='text-success'>Weight: </span>\n          {pokemonDetails.weight} pounds.\n        </div>\n        <div className='col-6 col-md-4 col-lg-3'>\n          <span className='text-success'>Experience: </span>\n          {pokemonDetails.base_experience}\n        </div>\n        <div className='col-6 col-md-4 col-lg-3'>\n          <span className='text-success'>Species: </span> {pokemonDetails.name}\n        </div>\n      </div>\n    );\n  };","import React from \"react\";\n\nexport const PokemonStats = ({pokeStats}) => {\n \n    return (\n        <div className='row justify-content-center mx-auto text-center text-warning'>\n        <div className='col-6 col-md-4 col-lg-3'>\n          <span className='text-info'>Hit Points: </span>\n          { pokeStats[0].base_stat || 0}\n        </div>\n        <div className='col-6 col-md-4 col-lg-3'>\n          <span className='text-info'>Attack: </span>\n          { pokeStats[1].base_stat || 0}\n        </div>\n        <div className='col-6 col-md-4 col-lg-3'>\n          <span className='text-info'>Defense: </span>\n          { pokeStats[2].base_stat || 0 }\n        </div>\n        <div className='col-6 col-md-4 col-lg-3'>\n          <span className='text-info'>Special Attack: </span> { pokeStats[3].base_stat || 0}\n        </div>\n      </div>\n    );\n  };","import React, { Fragment } from \"react\";\n\nexport const PokemonDefaultImage = ({name, pokeType}) => {\n  return (\n    <Fragment>\n            <div className='card-title display-3 text-uppercase text-danger'>\n              <div className='row justify-content-center'>\n                <div className='col-div2 border-bottom my-2'>\n                  {name}\n                  <br />\n                  <p className='text-warning h2 align-middle'>\n                    {pokeType} TYPE\n                  </p>\n                </div>\n              </div>\n            </div>\n    </Fragment>\n  );\n};\n\n","import React, { useContext } from \"react\";\nimport { PokeDataContext } from \"../context/DataProvider\";\nimport { DisplaySprites } from \"./DisplaySprites\";\nimport { GetPokemonAbilities } from \"./GetPokemonAbilities\";\nimport { GetRandomPokemon } from \"./GetRandomPokemon\";\nimport { PokemonDetails } from \"./PokemonDetails\";\nimport { PokemonStats } from \"./PokemonStats\";\nimport { Spinner } from \"./Spinner\";\nimport { PokemonDefaultImage } from \"./PokemonDefaultImage\";\n\nexport const Card = ({ data }) => {\n  const { isLoading } = useContext(PokeDataContext);\n  const {\n    name,\n    sprites,\n    types,\n    base_experience,\n    abilities,\n    height,\n    weight,\n    species,\n    stats,\n  } = data;\n\n  // Declaring objects with the destructured values\n  const pokemonDetails = { height, weight, base_experience, name, species };\n\n  // Get the pokemon type from the destructured types obj\n  const { name: pokeType } = types?.map((item) => item.type)[0] || {};\n\n  // Destructuring a complicated case of several keys with hyphens on it\n  const { \"generation-v\": generation_v } = sprites?.versions || {};\n  const { \"black-white\": black_white } = generation_v || {};\n  console.log(black_white);\n\n  const pokemonAnimatedViews = {\n    back_shiny: black_white?.animated?.back_shiny,\n    back_default: black_white?.animated?.back_default,\n    front_default: black_white?.animated?.front_default,\n    front_shiny: black_white?.animated?.front_shiny,\n  };\n\n  return (\n    <div className='card bg-transparent mb-3 mt-4'>\n      <div className='row g-0'>\n        <div className='col-md-4'>\n          {isLoading ? (\n            <Spinner />\n          ) : (\n            <img\n              src={\n                sprites?.other.dream_world.front_default ||\n                sprites?.front_shiny ||\n                sprites?.front_default\n              }\n              className='pokemon card-img-top'\n              alt={name}\n            />\n          )}\n        </div>\n        <div className='col-md-8'>\n          <div className='card-body'>\n            <PokemonDefaultImage name={name} pokeType={pokeType} />\n            <div className='card-subtitle mb-2 text-uppercase lead text-muted'>\n              <PokemonDetails pokemonDetails={pokemonDetails} />\n            </div>\n            <h3 className='card-subtitle mb-2 text-uppercase lead text-muted'>\n              {data?.stats && <PokemonStats pokeStats={stats} />}\n            </h3>\n\n            {sprites && (\n              <DisplaySprites\n                sprites={sprites}\n                pokemonAnimatedViews={pokemonAnimatedViews}\n                name={name}\n              />\n            )}\n          </div>\n\n          <GetPokemonAbilities abilities={abilities} name={name} />\n          <GetRandomPokemon />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { Fragment, useEffect, useContext } from \"react\";\nimport { PokeDataContext } from \"../context/DataProvider\";\nimport { Card } from \"./Card\";\n\nconst Pokedeck = () => {\n  const { pokemonsCollection, getAPIResults } = useContext(PokeDataContext);\n\n  useEffect(() => {\n    getAPIResults();\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <Fragment>\n      <div className='container-fluid mt-4 pt-4'>\n        <div className='row w-100'>\n          {pokemonsCollection && <Card data={pokemonsCollection} />}\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Pokedeck;\n"],"sourceRoot":""}