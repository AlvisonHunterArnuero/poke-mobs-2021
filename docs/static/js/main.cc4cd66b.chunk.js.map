{"version":3,"sources":["context/DataProvider.js","components/Spinner.jsx","routes.js","App.js","reportWebVitals.js","index.js"],"names":["PokeDataContext","createContext","DataProvider","children","useState","pokemonsCollection","setPokemonsCollection","fetchPokemon","setFetchPokemon","isLoading","setIsLoading","getAPIResults","a","RandomId","Math","floor","random","fetch","fetchedDataResults","json","res_JSON","Provider","value","Spinner","className","role","Pokedeck","React","lazy","Welcome","routes","path","name","component","exact","App","fallback","map","route","idx","render","props","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"yLACaA,EAAkBC,0BAoChBC,IAlCM,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACeC,mBAAS,IADxB,mBAC9BC,EAD8B,KACVC,EADU,OAEGF,mBAAS,WAFZ,mBAE9BG,EAF8B,KAEhBC,EAFgB,OAGHJ,oBAAS,GAHN,mBAG9BK,EAH8B,KAGnBC,EAHmB,KAM/BC,EAAa,uCAAG,gCAAAC,EAAA,6DACpBF,GAAa,GACPG,EAAWC,KAAKC,MAAsB,IAAhBD,KAAKE,SAAiB,GAF9B,SAGaC,MAAM,qCAAD,OACCJ,IAJnB,cAGdK,EAHc,gBAMGA,EAAmBC,OANtB,cAMdC,EANc,OAOpBd,EAAsBc,GACtBV,GAAa,GARO,kBASbU,GATa,4CAAH,qDAYnB,OACE,cAACpB,EAAgBqB,SAAjB,CACEC,MAAO,CACLjB,qBACAC,wBACAK,gBACAJ,eACAC,kBACAC,YACAC,gBARJ,SAWGP,M,6ECjCMoB,EAAU,WACrB,OACE,qBAAKC,UAAU,sDAAf,SACE,qBAAKA,UAAU,qCAAqCC,KAAK,SAAzD,SACE,sBAAMD,UAAU,kBAAhB,8B,6JCHFE,G,MAAWC,IAAMC,MAAK,kBAAM,iCAC5BC,EAAUF,IAAMC,MAAK,kBAAM,gCAgBlBE,EAdA,CACd,CACCC,KAAM,IACNC,KAAM,UACNC,UAAWJ,GAEZ,CACCE,KAAM,YACNC,KAAM,WACNC,UAAWP,GAET,CAAEK,KAAM,IAAKG,OAAO,EAAMF,KAAM,iBAAkBC,UAAWJ,I,eCoBlDM,MA5Bf,WACE,OACE,cAACjC,EAAA,EAAD,UACE,cAAC,IAAD,UACE,cAAC,WAAD,CAAUkC,SAAU,cAACb,EAAA,EAAD,IAApB,SACE,cAAC,IAAD,UACGO,EAAOO,KAAI,SAACC,EAAOC,GAClB,OACED,EAAML,WACJ,cAAC,IAAD,CAEEF,KAAMO,EAAMP,KACZG,MAAOI,EAAMJ,MACbF,KAAMM,EAAMN,KACZQ,OAAQ,SAACC,GACP,OAAO,cAACH,EAAML,UAAP,eAAqBQ,MALzBF,eCLVG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASX,OACP,cAAC,IAAMY,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.cc4cd66b.chunk.js","sourcesContent":["import React, { createContext, useState } from \"react\";\nexport const PokeDataContext = createContext();\n\nconst DataProvider = ({ children }) => {\n  const [pokemonsCollection, setPokemonsCollection] = useState([]);\n  const [fetchPokemon, setFetchPokemon] = useState(\"Pikachu\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  // API fetch event to retrieve the data needed on this component\n  const getAPIResults = async () => {\n    setIsLoading(true);\n    const RandomId = Math.floor(Math.random() * 806 + 1);\n    const fetchedDataResults = await fetch(\n      `https://pokeapi.co/api/v2/pokemon/${RandomId}`\n    );\n    const res_JSON = await fetchedDataResults.json();\n    setPokemonsCollection(res_JSON);\n    setIsLoading(false);\n    return res_JSON;\n  };\n\n  return (\n    <PokeDataContext.Provider\n      value={{\n        pokemonsCollection,\n        setPokemonsCollection,\n        getAPIResults,\n        fetchPokemon,\n        setFetchPokemon,\n        isLoading,\n        setIsLoading,\n      }}\n    >\n      {children}\n    </PokeDataContext.Provider>\n  );\n};\nexport default DataProvider;\n","export const Spinner = () => {\n  return (\n    <div className='row w-100 align-items-center justify-content-center'>\n      <div className='col-12 spinner-border text-warning' role='status'>\n        <span className='visually-hidden'>Loading...</span>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nconst Pokedeck = React.lazy(() => import(\"./components/Pokedeck\"));\nconst Welcome = React.lazy(() => import(\"./components/Welcome\"));\n\nconst routes = [\n\t{\n\t\tpath: \"/\",\n\t\tname: \"Welcome\",\n\t\tcomponent: Welcome,\n\t},\n\t{\n\t\tpath: \"/pokedeck\",\n\t\tname: \"Pokedeck\",\n\t\tcomponent: Pokedeck,\n\t},\n    { path: \"*\", exact: true, name: \"Page Not Found\", component: Welcome },\n];\n\nexport default routes;","import React, { Suspense } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport DataProvider from \"./context/DataProvider\";\nimport \"./App.css\";\nimport routes from \"./routes\";\nimport { Spinner } from \"./components/Spinner\";\n\nfunction App() {\n  return (\n    <DataProvider>\n      <Router>\n        <Suspense fallback={<Spinner />}>\n          <Switch>\n            {routes.map((route, idx) => {\n              return (\n                route.component && (\n                  <Route\n                    key={idx}\n                    path={route.path}\n                    exact={route.exact}\n                    name={route.name}\n                    render={(props) => {\n                      return <route.component {...props} />;\n                    }}\n                  />\n                )\n              );\n            })}\n          </Switch>\n        </Suspense>\n      </Router>\n    </DataProvider>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}